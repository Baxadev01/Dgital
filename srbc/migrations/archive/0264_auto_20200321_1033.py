# Generated by Django 2.2 on 2020-03-21 07:33

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import markdownx.models
import shared.models
import srbc.models


class Migration(migrations.Migration):

    dependencies = [
        ('srbc', '0263_auto_20200311_1321'),
    ]

    operations = [
        migrations.AlterField(
            model_name='autoanalizeformula',
            name='attention_required',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='checkpoint',
            name='is_editable',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='checkpoint',
            name='is_measurements_done',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='checkpoint',
            name='is_photo_done',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='checkpointphotos',
            name='rejection_reasons',
            field=shared.models.ChoiceArrayField(base_field=models.CharField(choices=[('CLOTHES', 'Неудачная одежда (леггинсы, футболки, слитный купальник и т.д.)'), ('CUTOFF', 'Обрезаны части тела (нет ног-головы)'), ('ANGLE', 'Неправильный ракурс (сверху вниз или снизу вверх)'), ('POSE', 'Неправильныая поза (три четверти вместо анфас и т.п., руки закрывают изгиб спины)'), ('LIGHT', 'Недостаточная освещенность-контрастность (снято в темноте, снято против света)'), ('BACKGROUND', 'Неправильный фон (очень пестрый)'), ('BLUR', 'Фотографии не в фокусе (изображение размыто)')], max_length=50), blank=True, default=list, size=None),
        ),
        migrations.AlterField(
            model_name='checkpointphotos',
            name='status',
            field=models.CharField(choices=[('NEW', 'На обработке'), ('APPROVED', 'Одобрены'), ('REJECTED', 'Отклонены')], default='NEW', max_length=20),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='end_time_is_next_day',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='faults_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='is_filled',
            field=models.BooleanField(blank=True, default=False, verbose_name='Заполнено'),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='is_overcalory',
            field=models.BooleanField(blank=True, default=False, verbose_name='Избыток калорий'),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='is_sweet',
            field=models.BooleanField(blank=True, default=False, verbose_name='Сахар'),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='meal_image_status',
            field=models.CharField(blank=True, choices=[('CORRECT', 'Фото за корректный день'), ('FAKE_DATE', 'Фото за некорректный день'), ('FAKE_NO_DATE', 'Фото без EXIF данных')], default='CORRECT', max_length=20),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='meal_type',
            field=models.CharField(choices=[('PREBREAKFAST', 'Предзавтрак'), ('BREAKFAST', 'Завтрак'), ('BRUNCH', 'ВЗ'), ('LUNCH', 'Обед'), ('MERIENDA', 'Полдник'), ('DINNER', 'Ужин'), ('SNACK', 'Перекус'), ('SLEEP', 'Дневной сон')], max_length=25),
        ),
        migrations.AlterField(
            model_name='diarymeal',
            name='start_time_is_next_day',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='bed_time_is_next_day',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='data_image',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'DATA'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diary_record', to='srbc.InstagramImage'),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='faults_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='has_meal_faults',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_fake_meals',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_meal_reviewed',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_meal_validated',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_mono',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_na_data',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_na_meals',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_ooc',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_overcalory',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_perfect_weight',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_pregnant',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_sick',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='is_unload',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='meal_image',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'MEAL'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diary_record', to='srbc.SRBCImage', verbose_name='Коллаж пиемов пищи'),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='meal_self_review',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='meal_status',
            field=models.CharField(choices=[('NOT_READY', 'Ожидает заполнения'), ('PENDING', 'Ожидает оцифровки'), ('VALIDATION', 'Ожидает проверки оцифровки'), ('FEEDBACK', 'Ожидает ответа'), ('DONE', 'Оцифрован'), ('NA_WARN', 'Нет данных, предупреждён'), ('NA', 'Нет данных'), ('FAKE', 'Данные недостоверны')], default='NOT_READY', max_length=50),
        ),
        migrations.AlterField(
            model_name='diaryrecord',
            name='pers_rec_flag',
            field=models.CharField(choices=[('NULL', 'Не выбрано'), ('OK', 'Соответствует'), ('F', 'Не соответствует'), ('NA', 'Не проверялось')], default='NULL', max_length=20, verbose_name='Соответствие рекомендациям'),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='bed_time_is_next_day',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='data_image',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'DATA'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='DiaryCopyImageData', to='srbc.InstagramImage'),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='faults_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='has_meal_faults',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_fake_meals',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_meal_reviewed',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_meal_validated',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_mono',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_na_data',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_na_meals',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_ooc',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_overcalory',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_perfect_weight',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_pregnant',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_sick',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='is_unload',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='meal_image',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'FOOD'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='DiaryCopyImageFood', to='srbc.InstagramImage'),
        ),
        migrations.AlterField(
            model_name='diaryrecordcopy',
            name='meal_status',
            field=models.CharField(choices=[('NOT_READY', 'Ожидает заполнения'), ('PENDING', 'Ожидает оцифровки'), ('VALIDATION', 'Ожидает проверки оцифровки'), ('FEEDBACK', 'Ожидает ответа'), ('DONE', 'Оцифрован'), ('NA_WARN', 'Нет данных, предупреждён'), ('NA', 'Нет данных'), ('FAKE', 'Данные недостоверны')], default='NOT_READY', max_length=50),
        ),
        migrations.AlterField(
            model_name='gttresult',
            name='glucose_unit',
            field=models.CharField(choices=[('MG_DL', 'мг/дл'), ('MM_L', 'ммоль/л')], max_length=50),
        ),
        migrations.AlterField(
            model_name='gttresult',
            name='is_reviewed',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='gttresult',
            name='status',
            field=models.CharField(choices=[('NEW', 'Новый'), ('DOC', 'Ожидает медицинского анализа'), ('MEAL', 'Ожидает корректировки рациона'), ('DONE', 'Проанализирован')], default='NEW', max_length=50),
        ),
        migrations.AlterField(
            model_name='instagramimage',
            name='is_deleted',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='instagramimage',
            name='role',
            field=models.CharField(choices=[('FOOD', 'ЕДА'), ('PHOTO', 'ФОТО'), ('DATA', 'ДАННЫЕ'), ('MEASURE', 'ЗАМЕРЫ'), ('UNKNOWN', 'N/A'), ('GOAL', 'ЦЕЛИ')], max_length=100),
        ),
        migrations.AlterField(
            model_name='invitation',
            name='club_only',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='invitation',
            name='communication_mode',
            field=models.CharField(blank=True, choices=[('CHANNEL', 'Канал'), ('CHAT', 'Чат')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='invitation',
            name='is_applied',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='mealcomponent',
            name='component_type',
            field=models.CharField(choices=[('bread', 'Хлеб'), ('fat', 'Жирный продукт'), ('carb', 'Готовые углеводы'), ('rawcarb', 'Сухие углеводы'), ('fatcarb', 'Жирные углеводы'), ('protein', 'Белковый продукт'), ('deadweight', 'Балласт'), ('veg', 'Овощи'), ('carbveg', 'Запасающие овощи'), ('fruit', 'Фрукты'), ('dfruit', 'Сухофрукты'), ('desert', 'Десерт'), ('drink', 'Калорийный напиток'), ('alco', 'Алкоголь'), ('unknown', 'Продукт с неизвестным составом')], max_length=50, verbose_name='Продукт'),
        ),
        migrations.AlterField(
            model_name='mealcomponent',
            name='details_sugars',
            field=models.BooleanField(blank=True, default=False, verbose_name='Содержит быстрые углеводы'),
        ),
        migrations.AlterField(
            model_name='mealcomponent',
            name='faults_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AlterField(
            model_name='mealcomponent',
            name='is_sweet',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='mealfault',
            name='comment',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='mealfault',
            name='is_active',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='mealfault',
            name='is_public',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='mealfault',
            name='scopes',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='mealfault',
            name='short_title',
            field=models.CharField(blank=True, default='', max_length=250),
        ),
        migrations.AlterField(
            model_name='mealnoticetemplate',
            name='is_active',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='mealnoticetemplatecategory',
            name='is_active',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='mealnoticetemplatecategory',
            name='scopes',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='mealproduct',
            name='component_type',
            field=models.CharField(blank=True, choices=[('bread', 'Хлеб'), ('fat', 'Жирный продукт'), ('carb', 'Готовые углеводы'), ('rawcarb', 'Сухие углеводы'), ('fatcarb', 'Жирные углеводы'), ('protein', 'Белковый продукт'), ('deadweight', 'Балласт'), ('veg', 'Овощи'), ('carbveg', 'Запасающие овощи'), ('fruit', 'Фрукты'), ('dfruit', 'Сухофрукты'), ('desert', 'Десерт'), ('drink', 'Калорийный напиток'), ('alco', 'Алкоголь'), ('unknown', 'Продукт с неопределенным составом'), ('mix', 'Сложная смесь')], default=None, max_length=50, null=True, verbose_name='Продукт'),
        ),
        migrations.AlterField(
            model_name='mealproduct',
            name='is_alco',
            field=models.BooleanField(blank=True, default=False, verbose_name='Содержит алкоголь'),
        ),
        migrations.AlterField(
            model_name='mealproduct',
            name='is_fast_carbs',
            field=models.BooleanField(blank=True, default=False, verbose_name='Содержит быстрые углеводы'),
        ),
        migrations.AlterField(
            model_name='mealproduct',
            name='is_verified',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='mealproduct',
            name='language',
            field=models.CharField(blank=True, default='ru', max_length=2),
        ),
        migrations.AlterField(
            model_name='mealproduct',
            name='verified_by',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='mealproductmoderation',
            name='component_type',
            field=models.CharField(blank=True, choices=[('bread', 'Хлеб'), ('fat', 'Жирный продукт'), ('carb', 'Готовые углеводы'), ('rawcarb', 'Сухие углеводы'), ('fatcarb', 'Жирные углеводы'), ('protein', 'Белковый продукт'), ('deadweight', 'Балласт'), ('veg', 'Овощи'), ('carbveg', 'Запасающие овощи'), ('fruit', 'Фрукты'), ('dfruit', 'Сухофрукты'), ('desert', 'Десерт'), ('drink', 'Калорийный напиток'), ('alco', 'Алкоголь'), ('unknown', 'Продукт с неопределенным составом'), ('mix', 'Сложная смесь')], default=None, max_length=50, null=True, verbose_name='Продукт'),
        ),
        migrations.AlterField(
            model_name='mealproductmoderation',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Ожидает модерации'), ('APPROVED_NEW', 'Новый продукт'), ('APPROVED_ALIAS', 'Синоним'), ('REJECTED_REMOVE', 'Отклонено - удалить из рациона'), ('REJECTED_IGNORE', 'Отклонено - игнорировать'), ('REJECTED_REPLACE', 'Отклонено - заменить продукт в рационе')], default='PENDING', max_length=50),
        ),
        migrations.AlterField(
            model_name='participationgoal',
            name='status',
            field=models.CharField(choices=[('NEW', 'Новая'), ('REACHED', 'Достигнутая'), ('DELETED', 'Удаленая')], default='NEW', max_length=10),
        ),
        migrations.AlterField(
            model_name='profile',
            name='baby_case',
            field=models.CharField(choices=[('PREGNANT', 'Беременность'), ('FEEDING', 'Кормление грудью'), ('NONE', 'Ничего из перечисленного')], default='NONE', max_length=100, verbose_name='Особый случай'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='communication_mode',
            field=models.CharField(blank=True, choices=[('CHANNEL', 'Канал'), ('CHAT', 'Чат')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='display_goal_weight',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='gender',
            field=models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], default='F', max_length=1),
        ),
        migrations.AlterField(
            model_name='profile',
            name='group_leader',
            field=models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'TeamLead'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='squadron', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='profile',
            name='instagram_update_required',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_active',
            field=models.BooleanField(blank=True, default=False, verbose_name='Профиль активен'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_in_club',
            field=models.BooleanField(blank=True, default=False, verbose_name='В клубе'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_instagram_private',
            field=models.BooleanField(blank=True, default=False, verbose_name='Закрытый инстаграм'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_meal_analyze_mode_locked',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_meal_comments_allowed',
            field=models.BooleanField(blank=True, default=True, verbose_name='Разрешены комментарии к рациону'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_perfect_weight',
            field=models.BooleanField(blank=True, default=False, verbose_name='Идеальный вес'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_pregnant_old',
            field=models.BooleanField(blank=True, default=False, verbose_name='Беременная/Кормящая'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='meals_sergeant',
            field=models.ForeignKey(blank=True, limit_choices_to={'groups__name__in': ['TeamLead', 'Sergeant', 'RapidCat']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meal_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='profile',
            name='stat_group',
            field=models.CharField(choices=[('INCLUDE_MAIN', 'INCLUDE_MAIN'), ('INCLUDE_GENERAL', 'INCLUDE_GENERAL'), ('INCLUDE_BASELINE', 'INCLUDE_BASELINE'), ('EXCLUDE_REQUESTED', 'EXCLUDE_REQUESTED'), ('EXCLUDE_REQUESTED_TMP', 'EXCLUDE_REQUESTED_TMP'), ('EXCLUDE_FORCED', 'EXCLUDE_FORCED'), ('EXCLUDE_FORCED_REANIMATED', 'EXCLUDE_FORCED_REANIMATED')], default='INCLUDE_GENERAL', max_length=30),
        ),
        migrations.AlterField(
            model_name='profile',
            name='timezone',
            field=models.CharField(blank=True, choices=[('Pacific/Midway', '(GMT-1100) Pacific/Midway'), ('Pacific/Niue', '(GMT-1100) Pacific/Niue'), ('Pacific/Pago_Pago', '(GMT-1100) Pacific/Pago_Pago'), ('Pacific/Honolulu', '(GMT-1000) Pacific/Honolulu'), ('Pacific/Rarotonga', '(GMT-1000) Pacific/Rarotonga'), ('Pacific/Tahiti', '(GMT-1000) Pacific/Tahiti'), ('US/Hawaii', '(GMT-1000) US/Hawaii'), ('Pacific/Marquesas', '(GMT-0930) Pacific/Marquesas'), ('America/Adak', '(GMT-0900) America/Adak'), ('Pacific/Gambier', '(GMT-0900) Pacific/Gambier'), ('America/Anchorage', '(GMT-0800) America/Anchorage'), ('America/Juneau', '(GMT-0800) America/Juneau'), ('America/Metlakatla', '(GMT-0800) America/Metlakatla'), ('America/Nome', '(GMT-0800) America/Nome'), ('America/Sitka', '(GMT-0800) America/Sitka'), ('America/Yakutat', '(GMT-0800) America/Yakutat'), ('Pacific/Pitcairn', '(GMT-0800) Pacific/Pitcairn'), ('US/Alaska', '(GMT-0800) US/Alaska'), ('America/Chihuahua', '(GMT-0700) America/Chihuahua'), ('America/Creston', '(GMT-0700) America/Creston'), ('America/Dawson', '(GMT-0700) America/Dawson'), ('America/Dawson_Creek', '(GMT-0700) America/Dawson_Creek'), ('America/Fort_Nelson', '(GMT-0700) America/Fort_Nelson'), ('America/Hermosillo', '(GMT-0700) America/Hermosillo'), ('America/Los_Angeles', '(GMT-0700) America/Los_Angeles'), ('America/Mazatlan', '(GMT-0700) America/Mazatlan'), ('America/Phoenix', '(GMT-0700) America/Phoenix'), ('America/Tijuana', '(GMT-0700) America/Tijuana'), ('America/Vancouver', '(GMT-0700) America/Vancouver'), ('America/Whitehorse', '(GMT-0700) America/Whitehorse'), ('Canada/Pacific', '(GMT-0700) Canada/Pacific'), ('US/Arizona', '(GMT-0700) US/Arizona'), ('US/Pacific', '(GMT-0700) US/Pacific'), ('America/Bahia_Banderas', '(GMT-0600) America/Bahia_Banderas'), ('America/Belize', '(GMT-0600) America/Belize'), ('America/Boise', '(GMT-0600) America/Boise'), ('America/Cambridge_Bay', '(GMT-0600) America/Cambridge_Bay'), ('America/Costa_Rica', '(GMT-0600) America/Costa_Rica'), ('America/Denver', '(GMT-0600) America/Denver'), ('America/Edmonton', '(GMT-0600) America/Edmonton'), ('America/El_Salvador', '(GMT-0600) America/El_Salvador'), ('America/Guatemala', '(GMT-0600) America/Guatemala'), ('America/Inuvik', '(GMT-0600) America/Inuvik'), ('America/Managua', '(GMT-0600) America/Managua'), ('America/Merida', '(GMT-0600) America/Merida'), ('America/Mexico_City', '(GMT-0600) America/Mexico_City'), ('America/Monterrey', '(GMT-0600) America/Monterrey'), ('America/Ojinaga', '(GMT-0600) America/Ojinaga'), ('America/Regina', '(GMT-0600) America/Regina'), ('America/Swift_Current', '(GMT-0600) America/Swift_Current'), ('America/Tegucigalpa', '(GMT-0600) America/Tegucigalpa'), ('America/Yellowknife', '(GMT-0600) America/Yellowknife'), ('Canada/Mountain', '(GMT-0600) Canada/Mountain'), ('Pacific/Galapagos', '(GMT-0600) Pacific/Galapagos'), ('US/Mountain', '(GMT-0600) US/Mountain'), ('America/Atikokan', '(GMT-0500) America/Atikokan'), ('America/Bogota', '(GMT-0500) America/Bogota'), ('America/Cancun', '(GMT-0500) America/Cancun'), ('America/Cayman', '(GMT-0500) America/Cayman'), ('America/Chicago', '(GMT-0500) America/Chicago'), ('America/Eirunepe', '(GMT-0500) America/Eirunepe'), ('America/Guayaquil', '(GMT-0500) America/Guayaquil'), ('America/Indiana/Knox', '(GMT-0500) America/Indiana/Knox'), ('America/Indiana/Tell_City', '(GMT-0500) America/Indiana/Tell_City'), ('America/Jamaica', '(GMT-0500) America/Jamaica'), ('America/Lima', '(GMT-0500) America/Lima'), ('America/Matamoros', '(GMT-0500) America/Matamoros'), ('America/Menominee', '(GMT-0500) America/Menominee'), ('America/North_Dakota/Beulah', '(GMT-0500) America/North_Dakota/Beulah'), ('America/North_Dakota/Center', '(GMT-0500) America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', '(GMT-0500) America/North_Dakota/New_Salem'), ('America/Panama', '(GMT-0500) America/Panama'), ('America/Rainy_River', '(GMT-0500) America/Rainy_River'), ('America/Rankin_Inlet', '(GMT-0500) America/Rankin_Inlet'), ('America/Resolute', '(GMT-0500) America/Resolute'), ('America/Rio_Branco', '(GMT-0500) America/Rio_Branco'), ('America/Winnipeg', '(GMT-0500) America/Winnipeg'), ('Canada/Central', '(GMT-0500) Canada/Central'), ('Pacific/Easter', '(GMT-0500) Pacific/Easter'), ('US/Central', '(GMT-0500) US/Central'), ('America/Anguilla', '(GMT-0400) America/Anguilla'), ('America/Antigua', '(GMT-0400) America/Antigua'), ('America/Aruba', '(GMT-0400) America/Aruba'), ('America/Barbados', '(GMT-0400) America/Barbados'), ('America/Blanc-Sablon', '(GMT-0400) America/Blanc-Sablon'), ('America/Boa_Vista', '(GMT-0400) America/Boa_Vista'), ('America/Campo_Grande', '(GMT-0400) America/Campo_Grande'), ('America/Caracas', '(GMT-0400) America/Caracas'), ('America/Cuiaba', '(GMT-0400) America/Cuiaba'), ('America/Curacao', '(GMT-0400) America/Curacao'), ('America/Detroit', '(GMT-0400) America/Detroit'), ('America/Dominica', '(GMT-0400) America/Dominica'), ('America/Grand_Turk', '(GMT-0400) America/Grand_Turk'), ('America/Grenada', '(GMT-0400) America/Grenada'), ('America/Guadeloupe', '(GMT-0400) America/Guadeloupe'), ('America/Guyana', '(GMT-0400) America/Guyana'), ('America/Havana', '(GMT-0400) America/Havana'), ('America/Indiana/Indianapolis', '(GMT-0400) America/Indiana/Indianapolis'), ('America/Indiana/Marengo', '(GMT-0400) America/Indiana/Marengo'), ('America/Indiana/Petersburg', '(GMT-0400) America/Indiana/Petersburg'), ('America/Indiana/Vevay', '(GMT-0400) America/Indiana/Vevay'), ('America/Indiana/Vincennes', '(GMT-0400) America/Indiana/Vincennes'), ('America/Indiana/Winamac', '(GMT-0400) America/Indiana/Winamac'), ('America/Iqaluit', '(GMT-0400) America/Iqaluit'), ('America/Kentucky/Louisville', '(GMT-0400) America/Kentucky/Louisville'), ('America/Kentucky/Monticello', '(GMT-0400) America/Kentucky/Monticello'), ('America/Kralendijk', '(GMT-0400) America/Kralendijk'), ('America/La_Paz', '(GMT-0400) America/La_Paz'), ('America/Lower_Princes', '(GMT-0400) America/Lower_Princes'), ('America/Manaus', '(GMT-0400) America/Manaus'), ('America/Marigot', '(GMT-0400) America/Marigot'), ('America/Martinique', '(GMT-0400) America/Martinique'), ('America/Montserrat', '(GMT-0400) America/Montserrat'), ('America/Nassau', '(GMT-0400) America/Nassau'), ('America/New_York', '(GMT-0400) America/New_York'), ('America/Nipigon', '(GMT-0400) America/Nipigon'), ('America/Pangnirtung', '(GMT-0400) America/Pangnirtung'), ('America/Port-au-Prince', '(GMT-0400) America/Port-au-Prince'), ('America/Port_of_Spain', '(GMT-0400) America/Port_of_Spain'), ('America/Porto_Velho', '(GMT-0400) America/Porto_Velho'), ('America/Puerto_Rico', '(GMT-0400) America/Puerto_Rico'), ('America/Santo_Domingo', '(GMT-0400) America/Santo_Domingo'), ('America/St_Barthelemy', '(GMT-0400) America/St_Barthelemy'), ('America/St_Kitts', '(GMT-0400) America/St_Kitts'), ('America/St_Lucia', '(GMT-0400) America/St_Lucia'), ('America/St_Thomas', '(GMT-0400) America/St_Thomas'), ('America/St_Vincent', '(GMT-0400) America/St_Vincent'), ('America/Thunder_Bay', '(GMT-0400) America/Thunder_Bay'), ('America/Toronto', '(GMT-0400) America/Toronto'), ('America/Tortola', '(GMT-0400) America/Tortola'), ('Canada/Eastern', '(GMT-0400) Canada/Eastern'), ('US/Eastern', '(GMT-0400) US/Eastern'), ('America/Araguaina', '(GMT-0300) America/Araguaina'), ('America/Argentina/Buenos_Aires', '(GMT-0300) America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', '(GMT-0300) America/Argentina/Catamarca'), ('America/Argentina/Cordoba', '(GMT-0300) America/Argentina/Cordoba'), ('America/Argentina/Jujuy', '(GMT-0300) America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', '(GMT-0300) America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', '(GMT-0300) America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', '(GMT-0300) America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', '(GMT-0300) America/Argentina/Salta'), ('America/Argentina/San_Juan', '(GMT-0300) America/Argentina/San_Juan'), ('America/Argentina/San_Luis', '(GMT-0300) America/Argentina/San_Luis'), ('America/Argentina/Tucuman', '(GMT-0300) America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', '(GMT-0300) America/Argentina/Ushuaia'), ('America/Asuncion', '(GMT-0300) America/Asuncion'), ('America/Bahia', '(GMT-0300) America/Bahia'), ('America/Belem', '(GMT-0300) America/Belem'), ('America/Cayenne', '(GMT-0300) America/Cayenne'), ('America/Fortaleza', '(GMT-0300) America/Fortaleza'), ('America/Glace_Bay', '(GMT-0300) America/Glace_Bay'), ('America/Godthab', '(GMT-0300) America/Godthab'), ('America/Goose_Bay', '(GMT-0300) America/Goose_Bay'), ('America/Halifax', '(GMT-0300) America/Halifax'), ('America/Maceio', '(GMT-0300) America/Maceio'), ('America/Moncton', '(GMT-0300) America/Moncton'), ('America/Montevideo', '(GMT-0300) America/Montevideo'), ('America/Paramaribo', '(GMT-0300) America/Paramaribo'), ('America/Punta_Arenas', '(GMT-0300) America/Punta_Arenas'), ('America/Recife', '(GMT-0300) America/Recife'), ('America/Santarem', '(GMT-0300) America/Santarem'), ('America/Santiago', '(GMT-0300) America/Santiago'), ('America/Sao_Paulo', '(GMT-0300) America/Sao_Paulo'), ('America/Thule', '(GMT-0300) America/Thule'), ('Antarctica/Palmer', '(GMT-0300) Antarctica/Palmer'), ('Antarctica/Rothera', '(GMT-0300) Antarctica/Rothera'), ('Atlantic/Bermuda', '(GMT-0300) Atlantic/Bermuda'), ('Atlantic/Stanley', '(GMT-0300) Atlantic/Stanley'), ('Canada/Atlantic', '(GMT-0300) Canada/Atlantic'), ('America/St_Johns', '(GMT-0230) America/St_Johns'), ('Canada/Newfoundland', '(GMT-0230) Canada/Newfoundland'), ('America/Miquelon', '(GMT-0200) America/Miquelon'), ('America/Noronha', '(GMT-0200) America/Noronha'), ('Atlantic/South_Georgia', '(GMT-0200) Atlantic/South_Georgia'), ('America/Scoresbysund', '(GMT-0100) America/Scoresbysund'), ('Atlantic/Azores', '(GMT-0100) Atlantic/Azores'), ('Atlantic/Cape_Verde', '(GMT-0100) Atlantic/Cape_Verde'), ('Africa/Abidjan', '(GMT+0000) Africa/Abidjan'), ('Africa/Accra', '(GMT+0000) Africa/Accra'), ('Africa/Bamako', '(GMT+0000) Africa/Bamako'), ('Africa/Banjul', '(GMT+0000) Africa/Banjul'), ('Africa/Bissau', '(GMT+0000) Africa/Bissau'), ('Africa/Conakry', '(GMT+0000) Africa/Conakry'), ('Africa/Dakar', '(GMT+0000) Africa/Dakar'), ('Africa/Freetown', '(GMT+0000) Africa/Freetown'), ('Africa/Lome', '(GMT+0000) Africa/Lome'), ('Africa/Monrovia', '(GMT+0000) Africa/Monrovia'), ('Africa/Nouakchott', '(GMT+0000) Africa/Nouakchott'), ('Africa/Ouagadougou', '(GMT+0000) Africa/Ouagadougou'), ('Africa/Sao_Tome', '(GMT+0000) Africa/Sao_Tome'), ('America/Danmarkshavn', '(GMT+0000) America/Danmarkshavn'), ('Antarctica/Troll', '(GMT+0000) Antarctica/Troll'), ('Atlantic/Canary', '(GMT+0000) Atlantic/Canary'), ('Atlantic/Faroe', '(GMT+0000) Atlantic/Faroe'), ('Atlantic/Madeira', '(GMT+0000) Atlantic/Madeira'), ('Atlantic/Reykjavik', '(GMT+0000) Atlantic/Reykjavik'), ('Atlantic/St_Helena', '(GMT+0000) Atlantic/St_Helena'), ('Europe/Dublin', '(GMT+0000) Europe/Dublin'), ('Europe/Guernsey', '(GMT+0000) Europe/Guernsey'), ('Europe/Isle_of_Man', '(GMT+0000) Europe/Isle_of_Man'), ('Europe/Jersey', '(GMT+0000) Europe/Jersey'), ('Europe/Lisbon', '(GMT+0000) Europe/Lisbon'), ('Europe/London', '(GMT+0000) Europe/London'), ('GMT', '(GMT+0000) GMT'), ('UTC', '(GMT+0000) UTC'), ('Africa/Algiers', '(GMT+0100) Africa/Algiers'), ('Africa/Bangui', '(GMT+0100) Africa/Bangui'), ('Africa/Brazzaville', '(GMT+0100) Africa/Brazzaville'), ('Africa/Casablanca', '(GMT+0100) Africa/Casablanca'), ('Africa/Ceuta', '(GMT+0100) Africa/Ceuta'), ('Africa/Douala', '(GMT+0100) Africa/Douala'), ('Africa/El_Aaiun', '(GMT+0100) Africa/El_Aaiun'), ('Africa/Kinshasa', '(GMT+0100) Africa/Kinshasa'), ('Africa/Lagos', '(GMT+0100) Africa/Lagos'), ('Africa/Libreville', '(GMT+0100) Africa/Libreville'), ('Africa/Luanda', '(GMT+0100) Africa/Luanda'), ('Africa/Malabo', '(GMT+0100) Africa/Malabo'), ('Africa/Ndjamena', '(GMT+0100) Africa/Ndjamena'), ('Africa/Niamey', '(GMT+0100) Africa/Niamey'), ('Africa/Porto-Novo', '(GMT+0100) Africa/Porto-Novo'), ('Africa/Tunis', '(GMT+0100) Africa/Tunis'), ('Arctic/Longyearbyen', '(GMT+0100) Arctic/Longyearbyen'), ('Europe/Amsterdam', '(GMT+0100) Europe/Amsterdam'), ('Europe/Andorra', '(GMT+0100) Europe/Andorra'), ('Europe/Belgrade', '(GMT+0100) Europe/Belgrade'), ('Europe/Berlin', '(GMT+0100) Europe/Berlin'), ('Europe/Bratislava', '(GMT+0100) Europe/Bratislava'), ('Europe/Brussels', '(GMT+0100) Europe/Brussels'), ('Europe/Budapest', '(GMT+0100) Europe/Budapest'), ('Europe/Busingen', '(GMT+0100) Europe/Busingen'), ('Europe/Copenhagen', '(GMT+0100) Europe/Copenhagen'), ('Europe/Gibraltar', '(GMT+0100) Europe/Gibraltar'), ('Europe/Ljubljana', '(GMT+0100) Europe/Ljubljana'), ('Europe/Luxembourg', '(GMT+0100) Europe/Luxembourg'), ('Europe/Madrid', '(GMT+0100) Europe/Madrid'), ('Europe/Malta', '(GMT+0100) Europe/Malta'), ('Europe/Monaco', '(GMT+0100) Europe/Monaco'), ('Europe/Oslo', '(GMT+0100) Europe/Oslo'), ('Europe/Paris', '(GMT+0100) Europe/Paris'), ('Europe/Podgorica', '(GMT+0100) Europe/Podgorica'), ('Europe/Prague', '(GMT+0100) Europe/Prague'), ('Europe/Rome', '(GMT+0100) Europe/Rome'), ('Europe/San_Marino', '(GMT+0100) Europe/San_Marino'), ('Europe/Sarajevo', '(GMT+0100) Europe/Sarajevo'), ('Europe/Skopje', '(GMT+0100) Europe/Skopje'), ('Europe/Stockholm', '(GMT+0100) Europe/Stockholm'), ('Europe/Tirane', '(GMT+0100) Europe/Tirane'), ('Europe/Vaduz', '(GMT+0100) Europe/Vaduz'), ('Europe/Vatican', '(GMT+0100) Europe/Vatican'), ('Europe/Vienna', '(GMT+0100) Europe/Vienna'), ('Europe/Warsaw', '(GMT+0100) Europe/Warsaw'), ('Europe/Zagreb', '(GMT+0100) Europe/Zagreb'), ('Europe/Zurich', '(GMT+0100) Europe/Zurich'), ('Africa/Blantyre', '(GMT+0200) Africa/Blantyre'), ('Africa/Bujumbura', '(GMT+0200) Africa/Bujumbura'), ('Africa/Cairo', '(GMT+0200) Africa/Cairo'), ('Africa/Gaborone', '(GMT+0200) Africa/Gaborone'), ('Africa/Harare', '(GMT+0200) Africa/Harare'), ('Africa/Johannesburg', '(GMT+0200) Africa/Johannesburg'), ('Africa/Khartoum', '(GMT+0200) Africa/Khartoum'), ('Africa/Kigali', '(GMT+0200) Africa/Kigali'), ('Africa/Lubumbashi', '(GMT+0200) Africa/Lubumbashi'), ('Africa/Lusaka', '(GMT+0200) Africa/Lusaka'), ('Africa/Maputo', '(GMT+0200) Africa/Maputo'), ('Africa/Maseru', '(GMT+0200) Africa/Maseru'), ('Africa/Mbabane', '(GMT+0200) Africa/Mbabane'), ('Africa/Tripoli', '(GMT+0200) Africa/Tripoli'), ('Africa/Windhoek', '(GMT+0200) Africa/Windhoek'), ('Asia/Amman', '(GMT+0200) Asia/Amman'), ('Asia/Beirut', '(GMT+0200) Asia/Beirut'), ('Asia/Damascus', '(GMT+0200) Asia/Damascus'), ('Asia/Famagusta', '(GMT+0200) Asia/Famagusta'), ('Asia/Gaza', '(GMT+0200) Asia/Gaza'), ('Asia/Hebron', '(GMT+0200) Asia/Hebron'), ('Asia/Jerusalem', '(GMT+0200) Asia/Jerusalem'), ('Asia/Nicosia', '(GMT+0200) Asia/Nicosia'), ('Europe/Athens', '(GMT+0200) Europe/Athens'), ('Europe/Bucharest', '(GMT+0200) Europe/Bucharest'), ('Europe/Chisinau', '(GMT+0200) Europe/Chisinau'), ('Europe/Helsinki', '(GMT+0200) Europe/Helsinki'), ('Europe/Kaliningrad', '(GMT+0200) Europe/Kaliningrad'), ('Europe/Kiev', '(GMT+0200) Europe/Kiev'), ('Europe/Mariehamn', '(GMT+0200) Europe/Mariehamn'), ('Europe/Riga', '(GMT+0200) Europe/Riga'), ('Europe/Sofia', '(GMT+0200) Europe/Sofia'), ('Europe/Tallinn', '(GMT+0200) Europe/Tallinn'), ('Europe/Uzhgorod', '(GMT+0200) Europe/Uzhgorod'), ('Europe/Vilnius', '(GMT+0200) Europe/Vilnius'), ('Europe/Zaporozhye', '(GMT+0200) Europe/Zaporozhye'), ('Africa/Addis_Ababa', '(GMT+0300) Africa/Addis_Ababa'), ('Africa/Asmara', '(GMT+0300) Africa/Asmara'), ('Africa/Dar_es_Salaam', '(GMT+0300) Africa/Dar_es_Salaam'), ('Africa/Djibouti', '(GMT+0300) Africa/Djibouti'), ('Africa/Juba', '(GMT+0300) Africa/Juba'), ('Africa/Kampala', '(GMT+0300) Africa/Kampala'), ('Africa/Mogadishu', '(GMT+0300) Africa/Mogadishu'), ('Africa/Nairobi', '(GMT+0300) Africa/Nairobi'), ('Antarctica/Syowa', '(GMT+0300) Antarctica/Syowa'), ('Asia/Aden', '(GMT+0300) Asia/Aden'), ('Asia/Baghdad', '(GMT+0300) Asia/Baghdad'), ('Asia/Bahrain', '(GMT+0300) Asia/Bahrain'), ('Asia/Kuwait', '(GMT+0300) Asia/Kuwait'), ('Asia/Qatar', '(GMT+0300) Asia/Qatar'), ('Asia/Riyadh', '(GMT+0300) Asia/Riyadh'), ('Europe/Istanbul', '(GMT+0300) Europe/Istanbul'), ('Europe/Kirov', '(GMT+0300) Europe/Kirov'), ('Europe/Minsk', '(GMT+0300) Europe/Minsk'), ('Europe/Moscow', '(GMT+0300) Europe/Moscow'), ('Europe/Simferopol', '(GMT+0300) Europe/Simferopol'), ('Indian/Antananarivo', '(GMT+0300) Indian/Antananarivo'), ('Indian/Comoro', '(GMT+0300) Indian/Comoro'), ('Indian/Mayotte', '(GMT+0300) Indian/Mayotte'), ('Asia/Baku', '(GMT+0400) Asia/Baku'), ('Asia/Dubai', '(GMT+0400) Asia/Dubai'), ('Asia/Muscat', '(GMT+0400) Asia/Muscat'), ('Asia/Tbilisi', '(GMT+0400) Asia/Tbilisi'), ('Asia/Yerevan', '(GMT+0400) Asia/Yerevan'), ('Europe/Astrakhan', '(GMT+0400) Europe/Astrakhan'), ('Europe/Samara', '(GMT+0400) Europe/Samara'), ('Europe/Saratov', '(GMT+0400) Europe/Saratov'), ('Europe/Ulyanovsk', '(GMT+0400) Europe/Ulyanovsk'), ('Europe/Volgograd', '(GMT+0400) Europe/Volgograd'), ('Indian/Mahe', '(GMT+0400) Indian/Mahe'), ('Indian/Mauritius', '(GMT+0400) Indian/Mauritius'), ('Indian/Reunion', '(GMT+0400) Indian/Reunion'), ('Asia/Kabul', '(GMT+0430) Asia/Kabul'), ('Asia/Tehran', '(GMT+0430) Asia/Tehran'), ('Antarctica/Mawson', '(GMT+0500) Antarctica/Mawson'), ('Asia/Aqtau', '(GMT+0500) Asia/Aqtau'), ('Asia/Aqtobe', '(GMT+0500) Asia/Aqtobe'), ('Asia/Ashgabat', '(GMT+0500) Asia/Ashgabat'), ('Asia/Atyrau', '(GMT+0500) Asia/Atyrau'), ('Asia/Dushanbe', '(GMT+0500) Asia/Dushanbe'), ('Asia/Karachi', '(GMT+0500) Asia/Karachi'), ('Asia/Oral', '(GMT+0500) Asia/Oral'), ('Asia/Qyzylorda', '(GMT+0500) Asia/Qyzylorda'), ('Asia/Samarkand', '(GMT+0500) Asia/Samarkand'), ('Asia/Tashkent', '(GMT+0500) Asia/Tashkent'), ('Asia/Yekaterinburg', '(GMT+0500) Asia/Yekaterinburg'), ('Indian/Kerguelen', '(GMT+0500) Indian/Kerguelen'), ('Indian/Maldives', '(GMT+0500) Indian/Maldives'), ('Asia/Colombo', '(GMT+0530) Asia/Colombo'), ('Asia/Kolkata', '(GMT+0530) Asia/Kolkata'), ('Asia/Kathmandu', '(GMT+0545) Asia/Kathmandu'), ('Antarctica/Vostok', '(GMT+0600) Antarctica/Vostok'), ('Asia/Almaty', '(GMT+0600) Asia/Almaty'), ('Asia/Bishkek', '(GMT+0600) Asia/Bishkek'), ('Asia/Dhaka', '(GMT+0600) Asia/Dhaka'), ('Asia/Omsk', '(GMT+0600) Asia/Omsk'), ('Asia/Qostanay', '(GMT+0600) Asia/Qostanay'), ('Asia/Thimphu', '(GMT+0600) Asia/Thimphu'), ('Asia/Urumqi', '(GMT+0600) Asia/Urumqi'), ('Indian/Chagos', '(GMT+0600) Indian/Chagos'), ('Asia/Yangon', '(GMT+0630) Asia/Yangon'), ('Indian/Cocos', '(GMT+0630) Indian/Cocos'), ('Antarctica/Davis', '(GMT+0700) Antarctica/Davis'), ('Asia/Bangkok', '(GMT+0700) Asia/Bangkok'), ('Asia/Barnaul', '(GMT+0700) Asia/Barnaul'), ('Asia/Ho_Chi_Minh', '(GMT+0700) Asia/Ho_Chi_Minh'), ('Asia/Hovd', '(GMT+0700) Asia/Hovd'), ('Asia/Jakarta', '(GMT+0700) Asia/Jakarta'), ('Asia/Krasnoyarsk', '(GMT+0700) Asia/Krasnoyarsk'), ('Asia/Novokuznetsk', '(GMT+0700) Asia/Novokuznetsk'), ('Asia/Novosibirsk', '(GMT+0700) Asia/Novosibirsk'), ('Asia/Phnom_Penh', '(GMT+0700) Asia/Phnom_Penh'), ('Asia/Pontianak', '(GMT+0700) Asia/Pontianak'), ('Asia/Tomsk', '(GMT+0700) Asia/Tomsk'), ('Asia/Vientiane', '(GMT+0700) Asia/Vientiane'), ('Indian/Christmas', '(GMT+0700) Indian/Christmas'), ('Antarctica/Casey', '(GMT+0800) Antarctica/Casey'), ('Asia/Brunei', '(GMT+0800) Asia/Brunei'), ('Asia/Choibalsan', '(GMT+0800) Asia/Choibalsan'), ('Asia/Hong_Kong', '(GMT+0800) Asia/Hong_Kong'), ('Asia/Irkutsk', '(GMT+0800) Asia/Irkutsk'), ('Asia/Kuala_Lumpur', '(GMT+0800) Asia/Kuala_Lumpur'), ('Asia/Kuching', '(GMT+0800) Asia/Kuching'), ('Asia/Macau', '(GMT+0800) Asia/Macau'), ('Asia/Makassar', '(GMT+0800) Asia/Makassar'), ('Asia/Manila', '(GMT+0800) Asia/Manila'), ('Asia/Shanghai', '(GMT+0800) Asia/Shanghai'), ('Asia/Singapore', '(GMT+0800) Asia/Singapore'), ('Asia/Taipei', '(GMT+0800) Asia/Taipei'), ('Asia/Ulaanbaatar', '(GMT+0800) Asia/Ulaanbaatar'), ('Australia/Perth', '(GMT+0800) Australia/Perth'), ('Australia/Eucla', '(GMT+0845) Australia/Eucla'), ('Asia/Chita', '(GMT+0900) Asia/Chita'), ('Asia/Dili', '(GMT+0900) Asia/Dili'), ('Asia/Jayapura', '(GMT+0900) Asia/Jayapura'), ('Asia/Khandyga', '(GMT+0900) Asia/Khandyga'), ('Asia/Pyongyang', '(GMT+0900) Asia/Pyongyang'), ('Asia/Seoul', '(GMT+0900) Asia/Seoul'), ('Asia/Tokyo', '(GMT+0900) Asia/Tokyo'), ('Asia/Yakutsk', '(GMT+0900) Asia/Yakutsk'), ('Pacific/Palau', '(GMT+0900) Pacific/Palau'), ('Australia/Darwin', '(GMT+0930) Australia/Darwin'), ('Antarctica/DumontDUrville', '(GMT+1000) Antarctica/DumontDUrville'), ('Asia/Ust-Nera', '(GMT+1000) Asia/Ust-Nera'), ('Asia/Vladivostok', '(GMT+1000) Asia/Vladivostok'), ('Australia/Brisbane', '(GMT+1000) Australia/Brisbane'), ('Australia/Lindeman', '(GMT+1000) Australia/Lindeman'), ('Pacific/Chuuk', '(GMT+1000) Pacific/Chuuk'), ('Pacific/Guam', '(GMT+1000) Pacific/Guam'), ('Pacific/Port_Moresby', '(GMT+1000) Pacific/Port_Moresby'), ('Pacific/Saipan', '(GMT+1000) Pacific/Saipan'), ('Australia/Adelaide', '(GMT+1030) Australia/Adelaide'), ('Australia/Broken_Hill', '(GMT+1030) Australia/Broken_Hill'), ('Antarctica/Macquarie', '(GMT+1100) Antarctica/Macquarie'), ('Asia/Magadan', '(GMT+1100) Asia/Magadan'), ('Asia/Sakhalin', '(GMT+1100) Asia/Sakhalin'), ('Asia/Srednekolymsk', '(GMT+1100) Asia/Srednekolymsk'), ('Australia/Currie', '(GMT+1100) Australia/Currie'), ('Australia/Hobart', '(GMT+1100) Australia/Hobart'), ('Australia/Lord_Howe', '(GMT+1100) Australia/Lord_Howe'), ('Australia/Melbourne', '(GMT+1100) Australia/Melbourne'), ('Australia/Sydney', '(GMT+1100) Australia/Sydney'), ('Pacific/Bougainville', '(GMT+1100) Pacific/Bougainville'), ('Pacific/Efate', '(GMT+1100) Pacific/Efate'), ('Pacific/Guadalcanal', '(GMT+1100) Pacific/Guadalcanal'), ('Pacific/Kosrae', '(GMT+1100) Pacific/Kosrae'), ('Pacific/Noumea', '(GMT+1100) Pacific/Noumea'), ('Pacific/Pohnpei', '(GMT+1100) Pacific/Pohnpei'), ('Asia/Anadyr', '(GMT+1200) Asia/Anadyr'), ('Asia/Kamchatka', '(GMT+1200) Asia/Kamchatka'), ('Pacific/Fiji', '(GMT+1200) Pacific/Fiji'), ('Pacific/Funafuti', '(GMT+1200) Pacific/Funafuti'), ('Pacific/Kwajalein', '(GMT+1200) Pacific/Kwajalein'), ('Pacific/Majuro', '(GMT+1200) Pacific/Majuro'), ('Pacific/Nauru', '(GMT+1200) Pacific/Nauru'), ('Pacific/Norfolk', '(GMT+1200) Pacific/Norfolk'), ('Pacific/Tarawa', '(GMT+1200) Pacific/Tarawa'), ('Pacific/Wake', '(GMT+1200) Pacific/Wake'), ('Pacific/Wallis', '(GMT+1200) Pacific/Wallis'), ('Antarctica/McMurdo', '(GMT+1300) Antarctica/McMurdo'), ('Pacific/Auckland', '(GMT+1300) Pacific/Auckland'), ('Pacific/Enderbury', '(GMT+1300) Pacific/Enderbury'), ('Pacific/Fakaofo', '(GMT+1300) Pacific/Fakaofo'), ('Pacific/Tongatapu', '(GMT+1300) Pacific/Tongatapu'), ('Pacific/Chatham', '(GMT+1345) Pacific/Chatham'), ('Pacific/Apia', '(GMT+1400) Pacific/Apia'), ('Pacific/Kiritimati', '(GMT+1400) Pacific/Kiritimati')], default='Europe/Moscow', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='tracker_brand',
            field=models.CharField(choices=[('XIAOMI', 'Xiaomi'), ('JAWBONE', 'Jawbone'), ('OTHER', 'Другой')], default='OTHER', max_length=100),
        ),
        migrations.AlterField(
            model_name='profile',
            name='treatment',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='profile',
            name='username_is_editable',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='visibility',
            field=models.CharField(choices=[('PUBLIC', 'Открытый'), ('RESTRICTED', 'Ограниченный'), ('PRIVATE', 'Закрытый')], default='PRIVATE', max_length=20),
        ),
        migrations.AlterField(
            model_name='profile',
            name='warning_flag',
            field=models.CharField(choices=[('TEST', 'Необходимо специализированное обследование'), ('OBSERVATION', 'Имеются особенности обмена, требуется наблюдение'), ('TREATMENT', 'Под наблюдением врачей'), ('DANGER', 'Необходимо лечение, требуется посещение врача'), ('PR', 'Необходимо постоянное следование персональным рекомендациям'), ('OOC', 'Питание не соответствует методичке и общим рекомендациям проекта'), ('OK', 'Всё ок')], default='OK', max_length=20),
        ),
        migrations.AlterField(
            model_name='profile',
            name='widgets_display',
            field=shared.models.ChoiceArrayField(base_field=models.CharField(choices=[('NOTES', 'Персональные рекомендации'), ('CALENDAR', 'Календарь данных'), ('MEETINGS', 'Последние митинги'), ('ALARM', 'Алярм'), ('CHARTS', 'Графики с данными')], max_length=50), blank=True, default=list, size=None),
        ),
        migrations.AlterField(
            model_name='srbcimage',
            name='image_type',
            field=models.CharField(choices=[('MEAL', 'Рацион'), ('DATA', 'Данные'), ('CHECKPOINT_PHOTO', 'Контрольные фото'), ('CHECKPOINT_PHOTO_FRONT', 'Сравнительные фото - анфас'), ('CHECKPOINT_PHOTO_SIDE', 'Сравнительные фото - сбоку'), ('CHECKPOINT_PHOTO_REAR', 'Сравнительные фото - сзади'), ('CHECKPOINT_MEASUREMENTS', 'Контрольные замеры'), ('CHECKPOINT_CHARTS', 'Контрольный TrueWeight'), ('MEDICAL', 'Результаты медицинских обследований'), ('GOALS', 'Цели (написанные от руки и сфотографированные)'), ('OTHER', 'Другое')], max_length=100),
        ),
        migrations.AlterField(
            model_name='srbcimage',
            name='is_editable',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='srbcimage',
            name='is_published',
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.AlterField(
            model_name='statgrouphistory',
            name='stat_group',
            field=models.CharField(choices=[('INCLUDE_MAIN', 'INCLUDE_MAIN'), ('INCLUDE_GENERAL', 'INCLUDE_GENERAL'), ('INCLUDE_BASELINE', 'INCLUDE_BASELINE'), ('EXCLUDE_REQUESTED', 'EXCLUDE_REQUESTED'), ('EXCLUDE_REQUESTED_TMP', 'EXCLUDE_REQUESTED_TMP'), ('EXCLUDE_FORCED', 'EXCLUDE_FORCED'), ('EXCLUDE_FORCED_REANIMATED', 'EXCLUDE_FORCED_REANIMATED')], max_length=30),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='duration_unit',
            field=models.CharField(choices=[('DAY', 'Дни'), ('WEEK', 'Недели'), ('MONTH', 'Месяцы')], default='DAY', max_length=25),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='renewal_mode',
            field=models.CharField(choices=[('AUTO', 'Авто-продление'), ('APPROVED', 'Авто-подтверждение'), ('MANUAL', 'Ручное подтверждение')], max_length=25),
        ),
        migrations.AlterField(
            model_name='tariffgroup',
            name='analysis_queue',
            field=models.CharField(blank=True, choices=[('MANUAL', 'Ручной запрос'), ('AUTO', 'Регулярный анализ'), ('NONE', 'Без анализа')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='tariffgroup',
            name='checkpoints_required',
            field=models.CharField(choices=[('ALWAYS', 'Каждые 2 недели'), ('BMI', 'Каждые две недели при выходе за норму ИМТ'), ('NEVER', 'Нет требований')], max_length=20),
        ),
        migrations.AlterField(
            model_name='tariffgroup',
            name='communication_mode',
            field=models.CharField(blank=True, choices=[('CHANNEL', 'Канал'), ('CHAT', 'Чат')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='tariffgroup',
            name='kb_access',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='tariffgroup',
            name='meals_analyze',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='tariffgroup',
            name='meetings_access',
            field=models.CharField(choices=[('NONE', 'Нет доступа'), ('NEWBIE', 'Доступ к новичковым митингам'), ('ALL', 'Доступ ко всем митингам')], max_length=20),
        ),
        migrations.AlterField(
            model_name='techduty',
            name='mode',
            field=models.CharField(choices=[('AUTO', 'Дежурный'), ('MANUAL', 'Доброволец')], default='AUTO', max_length=100),
        ),
        migrations.AlterField(
            model_name='techduty',
            name='techcat',
            field=models.ForeignKey(limit_choices_to={'groups__name': 'TechCat'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='techduty',
            name='user',
            field=models.ForeignKey(limit_choices_to={'groups__name': 'Participant'}, on_delete=django.db.models.deletion.CASCADE, related_name='SupervisedUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='add_fat',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='adjust_carb_bread_late',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='adjust_carb_bread_min',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='adjust_carb_carb_vegs',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='adjust_carb_sub_breakfast',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='adjust_fruits',
            field=models.CharField(blank=True, choices=[('NO', 'Без дополнительных ограничений'), ('RESTRICT', 'Минимизировать порцию фруктов'), ('EXCLUDE', 'Заменить фрукты на овощи, отруби или псиллиум')], default='NO', max_length=20),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='author',
            field=models.ForeignKey(default=srbc.models.default_policy, limit_choices_to={'groups__name__in': ['Doc', 'TeamLead', 'UserNotes Manager']}, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='notes_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='content',
            field=markdownx.models.MarkdownxField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='is_notification_sent',
            field=models.BooleanField(blank=True, default=False, verbose_name='Уведомлён'),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='is_published',
            field=models.BooleanField(blank=True, default=False, verbose_name='Видно участнику'),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='label',
            field=models.CharField(choices=[('DOC', 'Док / Обследования'), ('PZDC', 'Кризис'), ('WTF', 'Протокол участия'), ('IG', 'Регулярный анализ'), ('CHAT', 'Корректировка рациона'), ('NB', 'Служебная заметка'), ('ORG', 'Организационные вопросы'), ('STAT', 'Статистический отчёт')], max_length=100),
        ),
        migrations.AlterField(
            model_name='usernote',
            name='user',
            field=models.ForeignKey(limit_choices_to={'groups__name': 'Participant'}, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='wave',
            name='is_archived',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='wave',
            name='is_in_club',
            field=models.BooleanField(blank=True, default=False),
        ),
    ]
