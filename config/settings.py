# -*- coding: utf-8 -*-
"""
Django settings for wifit project.

Generated by 'django-admin startproject' using Django 1.11.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import datetime
import os
from django.utils.translation import ugettext_lazy as _

gettext = lambda s: s

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# Application definition
INSTALLED_APPS = [
    # 'admin.SuitConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.humanize',

    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'django.contrib.messages',

    'rest_framework',
    'drf_yasg',
    'rest_framework_tracking',
    'debug_toolbar',

    'bootstrap3',
    'bootstrapform',

    #'yandex_checkout',
    'yookassa',
    'paypal.standard.ipn',
    'social_django',

    'markdownx',
    'captcha',
    'storages',
    'admin_auto_filters',

    # Local apps
    'import_export',
    'srbc',
    'content',
    'crm',
    'support',
    'django_telegrambot',

    'django_countries',
    'phonenumber_field',
]

MIDDLEWARE = [
    # 'cms.middleware.utils.ApphookReloadMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'srbc.middleware.LoginUnderMiddleware',
    'srbc.middleware.UserRelatedMiddleware',
    'srbc.middleware.TimezoneMiddleware',
    # 'cms.middleware.user.CurrentUserMiddleware',
    # 'cms.middleware.page.CurrentPageMiddleware',
    # 'cms.middleware.toolbar.ToolbarMiddleware',
    # 'cms.middleware.language.LanguageCookieMiddleware',

    'social_django.middleware.SocialAuthExceptionMiddleware',
    'srbc.middleware.SRBCSocialAuthExceptionMiddleware',
]

AUTHENTICATION_BACKENDS = (
    # 'social_core.backends.instagram.InstagramOAuth2',
    # 'social_core.backends.jawbone.JawboneOAuth2',
    'srbc.social.TelegramAuth',
    'social_core.backends.apple.AppleIdAuth',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'srbc', 'templates'),
        ],
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.template.context_processors.csrf',
                'django.template.context_processors.tz',
                # 'sekizai.context_processors.sekizai',
                'django.template.context_processors.static',
                # 'cms.context_processors.cms_settings',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                'srbc.context_processors.mobile_app_login',

            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGES = (
    ## Customize this
    # ('en', gettext('en-us')),
    ('ru', gettext('ru-ru')),
)

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = False

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "srbc/static"),
    os.path.join(BASE_DIR, "content/static"),
]

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, "media", "content")
MEETINGS_DIR = os.path.join(BASE_DIR, "media", "meetings")
MEDIA_URL = '/media/'
MULTIMEDIA_ROOT = os.path.join(BASE_DIR, "media")

SOCIAL_AUTH_INSTAGRAM_AUTH_EXTRA_ARGUMENTS = {'scope': 'basic'}
SOCIAL_AUTH_JAWBONE_SCOPE = ['basic_read', 'sleep_read', 'move_read', 'weight_read', 'meal_read', ]

SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id,name,email'
}

SOCIAL_AUTH_LOGIN_ERROR_URL = '/accounts/login'

SOCIAL_AUTH_RAISE_EXCEPTIONS = False

TRUEWEIGHT_DELAY = 12

REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False,
    # 'UNICODE_JSON': True,
    # 'JSON_CHARSET': 'utf-8',
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'srbc.utils.permissions.JSONWebTokenMobileAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.URLPathVersioning',
    'ALLOWED_VERSIONS': ['v0', 'v1', 'v2'],
}

LOGIN_REDIRECT_URL = '/'

# SOCIAL_AUTH_FORCE_EMAIL_VALIDATION = True
ACCOUNT_EMAIL_REQUIRED = True

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',

    # 'social_core.pipeline.social_auth.social_user',
    'srbc.social.social_user',

    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',

    # 'social_core.pipeline.user.create_user',
    'srbc.social.create_user',

    'srbc.social.save_profile',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

SESSION_COOKIE_SECURE = False
SESSION_COOKIE_SAMESITE = "Lax"

BOOTSTRAP3 = {
    # The complete URL to the Bootstrap CSS file
    # Note that a URL can be either a string,
    # e.g. "https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css",
    # or a dict like the default value below.

    # The URL to the jQuery JavaScript file
    'jquery_url': '/static/js/jquery-3.2.1.min.js',

    # The Bootstrap base URL
    'base_url': None,

    # The complete URL to the Bootstrap CSS file (None means derive it from base_url)
    'css_url': '/static/css/bootstrap.min.css',

    # The complete URL to the Bootstrap CSS file (None means no theme)
    'theme_url': None,

    # The complete URL to the Bootstrap JavaScript file (None means derive it from base_url)
    'javascript_url': '/static/js/bootstrap.min.js',

    # Put JavaScript in the HEAD section of the HTML document (only relevant if you use bootstrap3.html)
    'javascript_in_head': False,

    # Include jQuery with Bootstrap JavaScript (affects django-bootstrap3 template tags)
    'include_jquery': False,

    # Label class to use in horizontal forms
    'horizontal_label_class': 'col-md-3',

    # Field class to use in horizontal forms
    'horizontal_field_class': 'col-md-9',

    # Set HTML required attribute on required fields, for Django <= 1.8 only
    'set_required': True,

    # Set HTML disabled attribute on disabled fields, for Django <= 1.8 only
    'set_disabled': False,

    # Set placeholder attributes to label if no placeholder is provided
    'set_placeholder': True,

    # Class to indicate required (better to set this in your Django form)
    'required_css_class': '',

    # Class to indicate error (better to set this in your Django form)
    'error_css_class': 'has-error',

    # Class to indicate success, meaning the field has valid input (better to set this in your Django form)
    'success_css_class': 'has-success',

    # Renderers (only set these if you have studied the source and understand the inner workings)
    'formset_renderers': {
        'default': 'bootstrap3.renderers.FormsetRenderer',
    },
    'form_renderers': {
        'default': 'bootstrap3.renderers.FormRenderer',
    },
    'field_renderers': {
        'default': 'bootstrap3.renderers.FieldRenderer',
        'inline': 'bootstrap3.renderers.InlineFieldRenderer',
    },
}

DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK": 'srbc.middleware.debug_callback',
}

DATETIME_FORMAT = 'Y-m-d H:i:s O'

NOCAPTCHA = True
SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(weeks=2),
    'JWT_ALLOW_REFRESH': True,
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=365),
}

MOBILE_DEEPLINK = "srbc://login"
APPLE_STORE_PATH = "https://apps.apple.com/ru/app/selfrebootcamp/id1507671287"
ANDROID_STORE_PATH = "https://play.google.com/store/apps/details?id=camp.selfrebootcamp.www"

QR_JWT_EXPIRATION_DELTA = datetime.timedelta(minutes=5)

YANDEX_MONEY_DEBUG = False
PAYPAL_TEST = False

YANDEX_NOTIFICATIONS_ALLOWED_IPS = [
    '77.75.156.11',
    '77.75.156.35',

    '185.71.76.0/27',
    '185.71.77.0/27',
    '77.75.153.0/25',
    '77.75.154.128/25',
]

AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

AWS_DEFAULT_ACL = None

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

CELERY_ROUTES = {
    'srbc.tasks.telegram.tasks.send_notification': {'queue': 'telegram'},
    'srbc.tasks.reports.tasks.generate_results_report': {'queue': 'user_reports'},
    'srbc.tasks.diary.tasks.create_diary_meal_collage_task': {'queue': 'diary'},
    'srbc.tasks.diary.tasks.update_collages_image_info': {'queue': 'diary'},
    'srbc.tasks.process_images_after_diary_data_update': {'queue': 'diary'},
    'srbc.tasks.update_diary_trueweight': {'queue': 'diary'},
    'srbc.tasks.collage_build': {'queue': 'photoset'},
    'srbc.tasks.create_meal_collage': {'queue': 'diary'}
}

DATA_UPLOAD_MAX_MEMORY_SIZE = 21621440

CHECKPOINT_MEASUREMENT_START_DATE = datetime.date(day=20, month=1, year=2018)

ODD_WEEK_START_DATE = datetime.date(day=29, month=4, year=2019)
CHECKPOINT_START_DATE = ODD_WEEK_START_DATE + datetime.timedelta(days=10)  # 2019-05-09
ANALYSIS_DATA_START_DATE = ODD_WEEK_START_DATE + datetime.timedelta(days=15)  # 2019-05-14

if os.environ.get('ENABLE_SRBC_BOTPOLLING'):
    # export ENABLE_SRBC_BOTPOLLING=1 && python manage.py botpolling --username=<some_name>
    ENABLE_BOTPOLLING = False
else:
    ENABLE_BOTPOLLING = True

CRM_MODEL_PAYMENT_PROVIDER = [
    ('YA', _(u"Яндекс-Касса (банковская карта)")),
    ('YM', _(u"Яндекс-Касса (Яндекс.Деньги)")),
    ('PP', _(u"PayPal")),
    ('STRIPE', _(u"Stripe")),
    ('PRODAMUS', _(u"Продамус")),
    ('PPSB', _(u"PayPal SmartBiochem")),
    ('REVOSB', _(u"Revolut SmartBiochem")),
    ('PPPol', _(u"PayPal Polina")),
    ('MANUAL', _(u"Вручную")),
]

CURRENCY_BY_PROVIDER = {
    'YA': 'RUB',
    'YM': 'RUB',
    'PRODAMUS': 'RUB',
    'PP': 'EUR',
    'STRIPE': 'EUR',
    'PPSB': 'EUR',
    'REVOSB': 'EUR',
    'PPPol': 'EUR'
}

ALLOWED_PAYMENT_METHODS = ['YA', 'PP', 'YM', 'STRIPE', 'PRODAMUS']

from .local_settings import *


