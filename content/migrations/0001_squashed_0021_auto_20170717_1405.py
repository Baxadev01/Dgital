# Generated by Django 3.0.6 on 2020-05-30 12:36

import content.models
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import markdownx.models


class Migration(migrations.Migration):

    replaces = [
        ('content', '0001_initial'),
        ('content', '0002_basics'),
        ('content', '0003_meeting'),
        ('content', '0004_meeting_type'),
        ('content', '0005_auto_20170622_0738'),
        ('content', '0006_post_tgmessage'),
        ('content', '0007_auto_20170622_2001'),
        ('content', '0008_auto_20170622_2046'),
        ('content', '0009_auto_20170622_2047'),
        ('content', '0010_auto_20170623_0743'),
        ('content', '0011_meetingplayhistory'),
        ('content', '0012_meetingplayhistory_item'),
        ('content', '0013_auto_20170624_1942'),
        ('content', '0014_auto_20170625_1731'),
        ('content', '0015_auto_20170702_2030'),
        ('content', '0016_picture'),
        ('content', '0017_picture_uid'),
        ('content', '0018_auto_20170703_1910'),
        ('content', '0019_auto_20170705_0655'),
        ('content', '0020_tgpost_image_url'),
        ('content', '0021_auto_20170717_1405')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('body', models.TextField()),
                ('comment', models.TextField(blank=True, default=b'')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Basics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('type', models.CharField(choices=[(b'TEXT', 'Текст'), (b'IMAGE', 'Изображение')], default=b'TEXT', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('is_uploaded', models.BooleanField(default=False)),
                ('is_playable', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[(b'REGULAR', 'Большой марафонский митинг'), (b'NEWBY', 'Новичковый митинг')], default=b'REGULAR', max_length=100)),
            ],
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['date'], name='content_mee_date_c08d45_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['is_playable', 'is_uploaded'], name='content_mee_is_play_d4521a_idx'),
        ),
        migrations.AddIndex(
            model_name='basics',
            index=models.Index(fields=['keyword', 'type'], name='content_bas_keyword_2e30f3_idx'),
        ),
        migrations.CreateModel(
            name='TGPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('channel_id', models.CharField(blank=True, max_length=32, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_global', models.BooleanField(default=False)),
                ('is_posted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts_by', to=settings.AUTH_USER_MODEL)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TGMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('status', models.CharField(choices=[(b'NEW', 'Новый'), (b'REJECTED', 'Отклонён'), (b'CANCELED', 'Отменён'), (b'ANSWERED', 'Отвечен')], default=b'NEW', max_length=20)),
                ('message_type', models.CharField(choices=[(b'QUESTION', 'Вопрос'), (b'FEEDBACK', 'Отзыв')], max_length=100)),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers_to', to='content.TGPost')),
                ('assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions_for', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='tgpost',
            index=models.Index(fields=['created_at'], name='content_tgp_created_72d27d_idx'),
        ),
        migrations.AddIndex(
            model_name='tgpost',
            index=models.Index(fields=['posted_at'], name='content_tgp_posted__d37d61_idx'),
        ),
        migrations.AddIndex(
            model_name='tgpost',
            index=models.Index(fields=['channel_id'], name='content_tgp_channel_27ba28_idx'),
        ),
        migrations.AddIndex(
            model_name='tgpost',
            index=models.Index(fields=['author'], name='content_tgp_author__007dc3_idx'),
        ),
        migrations.AddIndex(
            model_name='tgpost',
            index=models.Index(fields=['is_private'], name='content_tgp_is_priv_d4fa73_idx'),
        ),
        migrations.AddIndex(
            model_name='tgpost',
            index=models.Index(fields=['is_global'], name='content_tgp_is_glob_7d4d06_idx'),
        ),
        migrations.AddIndex(
            model_name='tgpost',
            index=models.Index(fields=['is_posted'], name='content_tgp_is_post_51b24d_idx'),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['created_at'], name='content_tgm_created_c47801_idx'),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['status'], name='content_tgm_status_5bf35c_idx'),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['author'], name='content_tgm_author__43b7eb_idx'),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['assigned'], name='content_tgm_assigne_9c38f9_idx'),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['answer'], name='content_tgm_answer__3a4aa9_idx'),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['message_type'], name='content_tgm_message_5a8649_idx'),
        ),
        migrations.CreateModel(
            name='MeetingPlayHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('ip_addr', models.GenericIPAddressField()),
                ('referer_check', models.BooleanField()),
                ('useragent', models.TextField(blank=True)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.Meeting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('item', models.CharField(blank=True, default=b'playlist', max_length=255)),
            ],
        ),
        migrations.AddIndex(
            model_name='meetingplayhistory',
            index=models.Index(fields=['user'], name='content_mee_user_id_1007e1_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingplayhistory',
            index=models.Index(fields=['meeting'], name='content_mee_meeting_1c52a2_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingplayhistory',
            index=models.Index(fields=['start_time'], name='content_mee_start_t_8dc3eb_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingplayhistory',
            index=models.Index(fields=['ip_addr'], name='content_mee_ip_addr_aea03c_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingplayhistory',
            index=models.Index(fields=['referer_check'], name='content_mee_referer_f7a5e3_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingplayhistory',
            index=models.Index(fields=['item'], name='content_mee_item_10a1eb_idx'),
        ),
        migrations.AddField(
            model_name='tgmessage',
            name='resolved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tgmessage',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resolved_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tgmessage',
            name='tg_message_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tgpost',
            name='message_id',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tgpost',
            name='channel_id',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('text', markdownx.models.MarkdownxField(blank=True, default=b'')),
                ('is_published', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to=content.models.utils.picture_upload_to)),
                ('uid', models.CharField(blank=True, default=content.models.utils.generate_uuid, max_length=32)),
            ],
        ),
        migrations.AddField(
            model_name='tgpost',
            name='image_url',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['resolved_at'], name='content_tgm_resolve_708f92_idx'),
        ),
        migrations.AddIndex(
            model_name='tgmessage',
            index=models.Index(fields=['resolved_by'], name='content_tgm_resolve_1107e6_idx'),
        ),
    ]
